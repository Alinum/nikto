#VERSION,1.00
###############################################################################
#  Copyright (C) 2006 CIRT, Inc.
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; version 2
#  of the License only.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to 
#  Free Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
###############################################################################
# PURPOSE:
# Perform IBM/Lotus Domino specific tests to identify database files accessible without authentication
###############################################################################
sub nikto_domino_init {
    my $id = { name        => "domino",
               full_name   => "IBM/Lotus Domino Specific Tests",
               author      => "RealRancor",
               description => "Performs a selection of IBM/Louts Domino specific tests to identify database files accessible without authentication",
               hooks       => { scan => { method => \&nikto_domino, }, 
                                start => { method => \&nikto_domino_load, },
                              },
               copyright   => "2016 CIRT Inc."
               };
    use vars qw/$DOMINODB/;
    return $id;
}

sub nikto_domino_load {
    # load up the database here so we don't redo it each time
    $DOMINODB = init_db("db_domino");
}

sub nikto_domino {
    # load mark from plugin caller
    my ($mark) = @_;

    # quit if user is terminating - this is a catch all and we should never execute it
    return if $mark->{'terminate'};

    # quit if banner is not from IBM/Lotus Domino
    if ($mark->{'banner'} !~ /lotus domino/i &&
        $mark->{'banner'} !~ /lotus-domino/i) { return; }
	
    # Now the main meat: we shall enumerated through the database and attempt to look for the
    # .nsf files which are accessible without authentication
    foreach my $item (@$DOMINODB) {
        # $item will contain the entry in db_domino, made into a hash pointer

        # Check if the user is terminating the current mark
        return if $mark->{'terminate'};

        # Set up URI
        my $uri = "/$item->{'dbfile'}";

        # Fetch the URI, we use nfetch to ensure that auth, headers etc are taken into account
        my ($res, $content, $request, $response) = nfetch($mark, $uri, "GET", "", "", "", "Domino detection");

        # We're looking for a 200 response
        if ($res eq "200") {
            # We could assume we've got a validate result here, but we may as well check the
            # data if the fetched database file is password protected.
            if ($content !~ /Please identify yourself/ &&
                $content !~ /type="password"/ &&
                $content !~ /<TITLE>Server Login<\/TITLE>/ ) {
                # Looks like a match - raise this up to the front end
                add_vulnerability(
                    $mark,                                                                            # mark structure to identify target
                    "IBM/Lotus Domino database file $item->{'dbfile'} without authentication found",  # message
                    $item->{'nikto_id'},                                                              # tid
                    523,                                                                              # OSVDB reference
                    $uri,                                                                             # URI
                    $request,                                                                         # Request structure for full output
                    $response);                                                                       # Response structure for full output
            }
        }
    }
}

1;
